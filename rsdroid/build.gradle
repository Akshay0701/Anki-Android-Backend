apply plugin: 'com.android.library' // required for aar generation to link to from AnkiDroid
apply plugin: 'com.google.protobuf'


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
    module = "../rslib-bridge"
    libname = "rsdroid"
    targets = ["arm", "x86"]
    profile = 'release'
    apiLevel = 16
    verbose = true
}

apply from: "proto.gradle"

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", '*.so'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    // Protobuf is part of the ABI, so include it as a compile/api dependency.
    api 'com.google.protobuf:protobuf-java:3.13.0'
    implementation 'androidx.sqlite:sqlite:2.1.0'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation project(path: ':rsdroid-testing')

}

preBuild.dependsOn "cargoBuild"