name: Build JAR for Robolectric Testing
on: push

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: 'true' # anki is a submodule

    # i18n did not seem to be handled
    - name: Init i18n submodule
      run: git submodule update --init --recursive

    # install cargo
    - name: Install Rust
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: nightly # nightly is currently required for Robolectric Testing
        override: true
        components: rustfmt, clippy

    # actions-rs only accepts "target" (although a "targets" param to be added in v2). We need 7 targets.
    - name: Install Rust Targets
      run: .github/scripts/install_rust_robolectric_targets.sh

    - name: Install x86_64-w64-mingw32-gcc
      run: brew install mingw-w64 && x86_64-w64-mingw32-gcc -v

    - name: Install x86_64-unknown-linux-gnu
      run: >
           brew tap SergioBenitez/osxct &&
           brew install x86_64-unknown-linux-gnu &&
           x86_64-unknown-linux-gnu-gcc -v

    - name: Build JAR
      run: >
              export ANKIDROID_LINUX_CC=x86_64-unknown-linux-gnu-gcc &&
              export ANKIDROID_MACOS_CC=cc &&
              ./gradlew clean rsdroid-testing:build rsdroid-testing:build -Dorg.gradle.project.macCC=$ANKIDROID_MACOS_CC -DtestBuildType=debug -Dorg.gradle.daemon=false -Dorg.gradle.console=plain
              
    - name: Check Compiled Libraries
      run: >
              cd rsdroid-testing/assets &&
              ../../.github/scripts/check_robolectric_assets.sh
              
              
    - name: Upload rsdroid-testing JAR as artifact
      uses: actions/upload-artifact@v2
      with:
        name: rsdroid-testing
        if-no-files-found: error
        path: rsdroid-testing/build/libs/rsdroid-testing.jar

  test:
    needs: build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: 'true' # we need the .proto files, but not the i18n files in the recursive submodule (yet).
      
    # I don't think this is necessary, before we got:
    #    > protoc: stdout: . stderr: fluent.proto: File not found.
    #    backend.proto:3:1: Import "fluent.proto" was not found or had errors.
    #    backend.proto:658:5: "FluentString" is not defined."
    - name: Init i18n submodule
      run: git submodule update --init --recursive
      
    - uses: actions/download-artifact@v2
      name: Download Artifact
      with:
        name: rsdroid-testing
        path: rsdroid-testing/build/libs
    
    - name: Run Tests
    # jar: disable building the jar (as we copied it from the artifact)
    # cargoBuild: disable as we're using the jar and do not need the Android libraries
    # TODO: We need to ensure that tests are executed
      run: ./gradlew rsdroid:test -x jar -x cargoBuildArm -x cargoBuildX86