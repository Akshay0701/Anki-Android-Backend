#!/usr/bin/env python

# Currently unused
# Generates fluent.proto from fluent translation (ftl) files.


import sys
import os
from fluent.syntax import parse
from fluent.syntax import ast

# requires: pip install fluent.syntax

def get_identifiers(fileData):
    idents = []
    for message in parse(fileData).body:
        if not isinstance(message, ast.Message):
            continue
        idents.append(message.id.name)
    sorted(idents)
    return idents

def proto_enum(idents):
    buf = r"""// This file is automatically generated as part of the build process.

syntax = "proto3";
package BackendProto;
enum FluentString {
"""


    for (idx, s) in enumerate(idents):
        name = s.replace("-", "_").upper()
        buf += "  {} = {};\n".format(name, idx)

    buf += "}\n"

    return buf

if __name__ == "__main__":
    path = sys.argv[1]
    buffer = ""

    for file in os.listdir(path):
        if not file.endswith(".ftl"):
            continue
        with open(os.path.join(path, file)) as f:
            for l in f.readlines():
                buffer += l + "\n"

    idents = get_identifiers(buffer)
    buf = proto_enum(idents)
    print(buf)
    
    
    