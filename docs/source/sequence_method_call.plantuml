@startuml
actor       actor       as user
participant RustDroidBackend as RustDroidBackend
boundary "Anki-Android-Backend"
participant BackendV1Impl as RustBackend
participant    NativeMethods.java    as NativeMethods
boundary "rslib-bridge"
participant lib.rs as rslibbridge
boundary "anki"
participant rslib as anki_backend
group Anki-Android

user -> RustDroidBackend : setLocalMinutesWest(10) 

RustDroidBackend -> RustBackend : setLocalMinutesWest(10)

RustBackend -> RustBackend: convert int to proto
RustBackend -> NativeMethods: executeCommand(ptr, 13, byte[]);
NativeMethods -> rslibbridge: command(ptr, 13, byte[]);
rslibbridge -> anki_backend: run_command_bytes(13, byte[])
anki_backend -> anki_backend: run_command_bytes2_inner(13, byte[])
anki_backend -> anki_backend: Switch on 13\ndecode input\ncall self.local_minutes_west\nreturn output as proto\nor error as proto
anki_backend -> rslibbridge: return (Empty|AnkiError)
rslibbridge -> rslibbridge: convert proto to bytes
rslibbridge -> rslibbridge: convert panic to bytes (if thrown)
rslibbridge -> RustDroidBackend: convert Empty to void and return


@enduml